import org.junit.platform.console.options.Details

plugins {
    id 'application'
    id 'com.github.johnrengelman.shadow' version '2.0.3'
    id 'org.unbroken-dome.test-sets' version '1.4.4'
}

mainClassName = 'hello.HelloWorldApplication'

dependencies {
    compile project (':hello-world-api')
    compile project (':hello-world-library')
    compile project (':hello-world-service')

    compile group: 'io.dropwizard', name: 'dropwizard-core', version: '1.3.1'
    compile group: 'io.dropwizard', name: 'dropwizard-configuration', version: '1.3.1'
    compile group: 'ru.vyarus', name: 'dropwizard-guicey', version: '4.1.0'

    testCompile group: 'io.dropwizard', name: 'dropwizard-testing', version: '1.3.1'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.1.0'
    testCompile group: 'org.junit.vintage', name: 'junit-vintage-engine', version: '5.1.0'
    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.+'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.+'
    testCompile group: 'org.mockito', name: 'mockito-junit-jupiter', version: '2.+'
}

junitPlatform {
    details = Details.TREE
}

test {
    // Enable JUnit 5 (Gradle 4.6+).
    useJUnitPlatform()
    // Fail the 'test' task on the first test failure
    failFast = true
    // Always run tests, even when nothing changed.
    dependsOn 'cleanTest'
    testLogging {
        events "passed", "skipped", "failed"
//        showStandardStreams = true
    }
}

testSets {
    integrationTest
}

integrationTest {
    // Enable JUnit 5 (Gradle 4.6+).
    useJUnitPlatform()
    // Fail the 'test' task on the first test failure
    failFast = true
    // Always run tests, even when nothing changed.
    dependsOn 'cleanTest'
    testLogging {
        events "passed", "skipped", "failed"
        showStandardStreams = true
    }
}

/*
jar {
    manifest {
        attributes "Main-Class": "hello.HelloWorldApplication"
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
*/

shadowJar {
    baseName = 'greeter'
    archiveName = 'greeter.jar'

    mergeServiceFiles()
}
